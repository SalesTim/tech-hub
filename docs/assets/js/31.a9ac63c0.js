(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{580:function(e,t,s){"use strict";s.r(t);var a=s(26),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"deep-dive-into-the-microsoft-teams-client"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#deep-dive-into-the-microsoft-teams-client"}},[e._v("#")]),e._v(" Deep Dive into the Microsoft Teams Client")]),e._v(" "),s("BlogHeadline"),e._v(" "),s("h2",{attrs:{id:"motivations"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#motivations"}},[e._v("#")]),e._v(" Motivations")]),e._v(" "),s("p",[e._v("In my previous article, I described "),s("RouterLink",{attrs:{to:"/blog/install-microsoft-teams-linux-wsl-ubuntu/"}},[e._v("how to install the Microsoft Teams client for Linux using Ubuntu on WSL 2")]),e._v(". As part of this journey, I thought that we may learn a little bit more about the architecture and technologies used by Microsoft to create this client.")],1),e._v(" "),s("h2",{attrs:{id:"what-do-we-know-so-far"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-do-we-know-so-far"}},[e._v("#")]),e._v(" What do we know so far?")]),e._v(" "),s("p",[e._v("As far as I can tell, for a long period of time, the only details we had about the Teams architecture was this high-level schema:\n"),s("img",{attrs:{src:"/img/blog/teams-architecture.png",alt:"Microsoft Teams architecture overview"}})]),e._v(" "),s("p",[e._v("Quite light about the Teams client ðŸ˜‰")]),e._v(" "),s("p",[e._v("Then later during a Microsoft Build conference, some additional details started to surface about the client architecture:")]),e._v(" "),s("p",[s("img",{attrs:{src:"/img/blog/teams-client-architecture.png",alt:"Microsoft Teams client architecture"}})]),e._v(" "),s("p",[e._v("and more specifically about the calling stacks:")]),e._v(" "),s("p",[s("img",{attrs:{src:"/img/blog/teams-client-calling-stacks.png",alt:"Microsoft Teams client calling stacks"}})]),e._v(" "),s("p",[e._v("Some articles were written relaying this new info, but maybe the only article that really tried to delve into the details is "),s("a",{attrs:{href:"https://blog.thoughtstuff.co.uk/2017/04/under-the-hood-of-the-microsoft-teams-desktop-application/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Under the Hood of the Microsoft Teams Desktop Application"),s("OutboundLink")],1),e._v(" written by a Microsoft MVP for Microsoft Teams "),s("a",{attrs:{href:"https://www.thoughtstuff.co.uk/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Tom Morgan"),s("OutboundLink")],1),e._v(". This is a good starting point, but I'm pretty sure we can go further.")]),e._v(" "),s("p",[e._v("In this article, we'll discover how to access part of the Microsoft Teams client source code and see what we can learn from it.")]),e._v(" "),s("h2",{attrs:{id:"extracting-the-microsoft-teams-package"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#extracting-the-microsoft-teams-package"}},[e._v("#")]),e._v(" Extracting the Microsoft Teams package")]),e._v(" "),s("p",[e._v("First, refer to my "),s("RouterLink",{attrs:{to:"/blog/install-microsoft-teams-linux-wsl-ubuntu/"}},[e._v("previous article")]),e._v(" to download the Microsoft Teams desktop client for linux.")],1),e._v(" "),s("p",[e._v("Once you have downloaded the "),s("code",[e._v("*.deb")]),e._v(" file, extract it to see how the electron app is organized.")]),e._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Use dpkg to extract the package")]),e._v("\ndpkg -x ~/Downloads/teams-insiders_1.3.00.16851_amd64.deb ~/teams-insiders-src\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Navigate to the extracted folder")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" ~/teams-insiders-src\n")])])]),s("p",[e._v("Now list the top level 5 folder structure to see what's inside:")]),e._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# If ouy need to install "tree", which is not installed by default on Ubuntu WSL')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("apt")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" tree\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Show the top 5 directory levels")]),e._v("\ntree -d -L "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),e._v("\n")])])]),s("p",[e._v("Here is a macroscopic view of the different folders:")]),e._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[e._v("usr                               "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Target folder where teams will be deployed")]),e._v("\nâ”œâ”€â”€ bin                           "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Teams executable startup script (Linux specific) as a `.sh` file")]),e._v("\nâ””â”€â”€ share\n    â”œâ”€â”€ applications              "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Shortcut `.desktop` file that enables Teams to be visible in the desktop application menu")]),e._v("\n    â”œâ”€â”€ pixmaps                   "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Teams app icon")]),e._v("\n    â””â”€â”€ teams-insiders            "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Electron runtime and some additional binaries such as ffmpeg for media processing")]),e._v("\n        â”œâ”€â”€ locales               "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Teams locale files as `.pak` with translations in different languages")]),e._v("\n        â”œâ”€â”€ resources\n        â”‚   â”œâ”€â”€ app.asar.unpacked "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Binary electron native modules as `.node` files")]),e._v("\n        â”‚   â”œâ”€â”€ assets            "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Pictures, icons and sounds files")]),e._v("\n        â”‚   â”œâ”€â”€ locales           "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Teams locale files as `.json` with translations in different languages")]),e._v("\n        â”‚   â””â”€â”€ tmp               "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Temporary files, probably created by the ThirdPartyNotice generator")]),e._v("\n        â””â”€â”€ swiftshader           "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Binary dependency to the SwiftShader graphic api")]),e._v("\n")])])]),s("p",[e._v("What can we learn from this:")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("Teams in a "),s("strong",[e._v("standard electron app")]),e._v(" (OK nothing new here ðŸ˜‰)")])]),e._v(" "),s("li",[s("p",[e._v("The "),s("strong",[e._v("startup script")]),e._v(" is a standard bash "),s("code",[e._v(".sh")]),e._v(" script:")])])]),e._v(" "),s("ul",[s("li",[e._v('It\'s made "executable" by a '),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Shebang_(Unix)",target:"_blank",rel:"noopener noreferrer"}},[e._v("shebang"),s("OutboundLink")],1),e._v(" character sequence: "),s("code",[e._v("#!/bin/sh")])]),e._v(" "),s("li",[e._v("It loads the main electron app and defines the location of the logs folder and startup log file")])]),e._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[s("strong",[e._v("Binary dependencies")]),e._v(": Aside from the main electron app (That will download its required dependencies from the npm package registry), the package includes some additional binary dependencies, in different formats:")])]),e._v(" "),s("ul",[s("li",[s("code",[e._v(".so")]),e._v(" files: "),s("code",[e._v("so")]),e._v(" stands for shared object (a library format commonly used in C/C++ development), that mostly includes electron base libraries and dependencies such as the "),s("a",{attrs:{href:"https://github.com/google/swiftshader",target:"_blank",rel:"noopener noreferrer"}},[e._v("SwiftShader"),s("OutboundLink")],1),e._v(" graphic api.")]),e._v(" "),s("li",[s("code",[e._v(".node")]),e._v(" files: "),s("a",{attrs:{href:"https://www.electronjs.org/docs/tutorial/using-native-node-modules",target:"_blank",rel:"noopener noreferrer"}},[e._v("Electron native node modules"),s("OutboundLink")],1),e._v(", that enables Teams to access some lower-level features than what you couldn't use directly in a hybrid web app, or to perform resource-intensive operations faster, such as the "),s("code",[e._v("slimcore")]),e._v(" library, which operates the telephony features in Teams.")])]),e._v(" "),s("h2",{attrs:{id:"accessing-microsoft-teams-client-source-code"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#accessing-microsoft-teams-client-source-code"}},[e._v("#")]),e._v(" Accessing Microsoft Teams client source code")]),e._v(" "),s("p",[e._v("It's time to go down the rabbit hole Alice! (or Neo depending on your references)")]),e._v(" "),s("p",[s("img",{attrs:{src:"/img/blog/alice-rabbit-hole.gif",alt:"Alice going down the rabbit hole"}})]),e._v(" "),s("p",[e._v("Let's look at the "),s("code",[e._v("resources")]),e._v(" folder. This is where the sources are packaged in "),s("code",[e._v("asar")]),e._v(" files. "),s("code",[e._v("asar")]),e._v(" files is just a tar-like archive format, that we can hopefully unarchive easily.\nTeams client source code is in the "),s("code",[e._v("app.asar")]),e._v(" file (the other asar files should be meaningless as they're the default electron packages). Let's unarchive it:")]),e._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Install the asar engine globally")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" -g --engine-strict asar\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# Unarchive app.asar in a "src" folder')]),e._v("\nasar extract ./usr/share/teams-insiders/resources/app.asar ./usr/share/teams-insiders/resources/src\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),s("p",[e._v("If you're curious, you can also list contents of an asar archive directly without extracting it, for instance:")]),e._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[e._v("asar list ./usr/share/teams-insiders/resources/electron.asar\n")])])])]),e._v(" "),s("p",[e._v("Now let's launch VSCode from this new "),s("code",[e._v("src")]),e._v(" folder to have an overview of the source code:")]),e._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[e._v("code ./usr/share/teams-insiders/resources/src\n")])])]),s("p",[e._v("Now you should see the electron app source code:")]),e._v(" "),s("p",[s("img",{attrs:{src:"/img/blog/teams-client-source-code.png",alt:"Microsoft Teams client source code"}})]),e._v(" "),s("h2",{attrs:{id:"what-can-we-learn-from-this"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-can-we-learn-from-this"}},[e._v("#")]),e._v(" What can we learn from this?")]),e._v(" "),s("p",[e._v("I've only spent a few minutes analyzing the source code so far, but we still can see some very interesting things.")]),e._v(" "),s("h3",{attrs:{id:"a-limited-set-of-the-codebase"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#a-limited-set-of-the-codebase"}},[e._v("#")]),e._v(" A limited set of the codebase")]),e._v(" "),s("p",[e._v("As a hybrid app, of course you'll not see here any server-side code. But more than this, a lot of the client-side code is dynamically loaded at runtime from Microsoft's servers (This code could be inspected easily right from a web browser using the developers tools). Still, we have access to:")]),e._v(" "),s("ul",[s("li",[e._v("The shell that controls and executes all the Microsoft Teams apps (first-party, secondt-party or third-party)")]),e._v(" "),s("li",[e._v("Some interesting configuration information")]),e._v(" "),s("li",[e._v("Most of the direct app dependencies")])]),e._v(" "),s("p",[e._v("Also, we don't have access to the original source code (that is written in TypeScript), but only to its transpiled version in JavaScript. Hopefully, the TypeScript compiler produces pretty human-readable code.")]),e._v(" "),s("h3",{attrs:{id:"package"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#package"}},[e._v("#")]),e._v(" Package")]),e._v(" "),s("p",[e._v("From the "),s("code",[e._v("package.json")]),e._v(" file, we can see that the project was started in 2016. Also, if you look at the dependencies, we can see some interesting things...")]),e._v(" "),s("p",[s("strong",[e._v("KeyTar")]),e._v(":"),s("br"),e._v(" "),s("a",{attrs:{href:"https://www.npmjs.com/package/keytar",target:"_blank",rel:"noopener noreferrer"}},[e._v("KeyTar"),s("OutboundLink")],1),e._v(" is an interesting package that enables node.js apps to interact with os-specific credentials managers using an abstracted interface:")]),e._v(" "),s("ul",[s("li",[e._v("Windows: Windows credential manager")]),e._v(" "),s("li",[e._v("Mac: Keychain Access")]),e._v(" "),s("li",[e._v("Linux: libsecret (and gnome-keyring on Ubuntu)")])]),e._v(" "),s("p",[e._v("From the file "),s("code",[e._v("utility-keytar.js")]),e._v(", we can see that this module is used to securely store and retreive credentials and other secret values such as Microsoft Graph tokens.")]),e._v(" "),s("p",[s("strong",[e._v("FastText")]),e._v(":"),s("br"),e._v(" "),s("a",{attrs:{href:"https://fasttext.cc/",target:"_blank",rel:"noopener noreferrer"}},[e._v("fastText"),s("OutboundLink")],1),e._v(" is an open-source and lightweight library that performs various text-analysis operations."),s("br"),e._v("\nFrom the "),s("code",[e._v("languageDetectionService.js")]),e._v(" file, we can see that it's especially used for language detection. You may ask yourself "),s("em",[e._v('"why is Microsoft not using Azure Text Analytics API?"')]),e._v("... well... I don't know, but it may be related to the fact that Teams may in the future support some forms of offline mode, therefore using this kind of module could make sense.")]),e._v(" "),s("h3",{attrs:{id:"configuration-file"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configuration-file"}},[e._v("#")]),e._v(" Configuration file")]),e._v(" "),s("p",[e._v("From the "),s("code",[e._v("env_config.json")]),e._v(" file, we can see some interesting things too."),s("br"),e._v("\nFor instance, the list of the different environments that supports Microsoft Teams, such as "),s("code",[e._v("commercial cloud")]),e._v(", "),s("code",[e._v("government")]),e._v(" or "),s("code",[e._v("department of defense")])]),e._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"serverEndpointsMap"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"teams.microsoft.com"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"https://teams.microsoft.com"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"devspaces.skype.com"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"https://teams.microsoft.com"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"local.teams.office.com"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"https://teams.microsoft.com"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"gov.teams.microsoft.us"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"https://gov.teams.microsoft.us"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"dod.teams.microsoft.us"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"https://dod.teams.microsoft.us"')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),s("p",[e._v("We can also see some interesting options that are quite self-explanatory:")]),e._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"enableMultiWindow"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"enableSso"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"spellcheckerDisabled"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"urlShortenerEndpoint"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"https://urlshortener.teams.microsoft.com"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"enableOfficeIntegration"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n")])])]),s("h3",{attrs:{id:"fun-stuff"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fun-stuff"}},[e._v("#")]),e._v(" Fun stuff")]),e._v(" "),s("p",[e._v("I've only scratched the surface, and there is for sure a lot of other interesting things to learn from this app. But before I leave, let's have some fun!")]),e._v(" "),s("p",[s("strong",[e._v("Fighting against TypeScript ðŸ˜‚")]),s("br"),e._v("\nAs I previously mentioned, this app is written in TypeScript. You can see from the "),s("code",[e._v("preload_window_sandbox.js")]),e._v(" file that the development team sometimes has to fight against it:")]),e._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// HACK: Since TypeScript inherits static properties too, we have to")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// fight against TypeScript here so Subject can have a different static create signature")]),e._v("\n")])])]),s("p",[s("strong",[e._v("TeamSpace??? ðŸ¤”")]),s("br"),e._v("\nFrom the "),s("code",[e._v("windowmanager.js")]),e._v(" file, you can still see some references to "),s("code",[e._v("TeamSpace")]),e._v(" which was the internal codename of Teams before it's official launch.")]),e._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// prevent loading the teamspace window instead load in default browser")]),e._v("\n")])])]),s("p",[s("strong",[e._v("Looking for Alphonso? ðŸ”Ž")]),s("br"),e._v("\nAgain from the "),s("code",[e._v("env_config.json")]),e._v(" file, there is this funny option:")]),e._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"enableAlphonso"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n")])])]),s("p",[e._v('I didn\'t find on the web a lot of references to "Alphonso" that may be related to Teams. I just found this '),s("a",{attrs:{href:"https://www.npmjs.com/package/alphonso",target:"_blank",rel:"noopener noreferrer"}},[e._v("npm package"),s("OutboundLink")],1),e._v(" which is a private offline npm registry. It could make sense as Microsoft may use private local registries to avoid to publish some packages publicly... Anybody knows what it stands for?")]),e._v(" "),s("p",[s("strong",[e._v("A little FREE advice for Microsoft ðŸ˜Ž")]),s("br"),e._v("\nLast but not least, from the "),s("code",[e._v("sharingIndicatorFactory.js")]),e._v(" file, you can see that the development team has to fix this issue:")]),e._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// eval() needs to be used to load expression requires with webpack.")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// TODO 873714: remove dependency on eval.")]),e._v("\n")])])]),s("p",[e._v("This is a very comon development issue (that we faced at SalesTim in the past)."),s("br"),e._v("\nIf somebody from the Teams development team is reading this article, have a look at the "),s("a",{attrs:{href:"https://www.npmjs.com/package/vm2",target:"_blank",rel:"noopener noreferrer"}},[e._v("vm2"),s("OutboundLink")],1),e._v(" npm package... This package relies on the latest "),s("a",{attrs:{href:"https://nodejs.org/api/vm.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Node.js VM module"),s("OutboundLink")],1),e._v(", and that's the solution we finally used at SalesTim to create a sandbox executing "),s("code",[e._v("eval")]),e._v(" operations in an really safe context.")]),e._v(" "),s("Comments")],1)}),[],!1,null,null,null);t.default=r.exports}}]);