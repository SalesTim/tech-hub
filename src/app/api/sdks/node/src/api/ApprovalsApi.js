/**
 * SalesTim API
 * The unified Microsoft Teams Governance API. Visit our [Tech Hub](https://developers.salestim.com/api/) for more information. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@salestim.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiError from '../model/ApiError';
import ApprovedApprovalResponsePayload from '../model/ApprovedApprovalResponsePayload';
import RejectedApprovalResponsePayload from '../model/RejectedApprovalResponsePayload';

/**
* Approvals service.
* @module api/ApprovalsApi
* @version 1.0.0
*/
export default class ApprovalsApi {

    /**
    * Constructs a new ApprovalsApi. 
    * @alias module:api/ApprovalsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the approveTeamCreation operation.
     * @callback module:api/ApprovalsApi~approveTeamCreationCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Approve a team creation request
     * Approve a team creation request. TIER 3️⃣ | ROLES - AUTHENTICATED_USER.
     * @param {String} approvalRequestId The approval request ID.
     * @param {Object} opts Optional parameters
     * @param {module:model/ApprovedApprovalResponsePayload} opts.approvedApprovalResponsePayload An ApprovedApprovalResponsePayload object.
     * @param {module:api/ApprovalsApi~approveTeamCreationCallback} callback The callback function, accepting three arguments: error, data, response
     */
    approveTeamCreation(approvalRequestId, opts, callback) {
      opts = opts || {};
      let postBody = opts['approvedApprovalResponsePayload'];
      // verify the required parameter 'approvalRequestId' is set
      if (approvalRequestId === undefined || approvalRequestId === null) {
        throw new Error("Missing the required parameter 'approvalRequestId' when calling approveTeamCreation");
      }

      let pathParams = {
        'approvalRequestId': approvalRequestId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/approvals/{approvalRequestId}/approve', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the rejectTeamCreation operation.
     * @callback module:api/ApprovalsApi~rejectTeamCreationCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reject a team creation request
     * Reject a team creation request. TIER 3️⃣ | ROLES - AUTHENTICATED_USER.
     * @param {String} approvalRequestId The approval request ID.
     * @param {Object} opts Optional parameters
     * @param {module:model/RejectedApprovalResponsePayload} opts.rejectedApprovalResponsePayload An RejectedApprovalResponsePayload object.
     * @param {module:api/ApprovalsApi~rejectTeamCreationCallback} callback The callback function, accepting three arguments: error, data, response
     */
    rejectTeamCreation(approvalRequestId, opts, callback) {
      opts = opts || {};
      let postBody = opts['rejectedApprovalResponsePayload'];
      // verify the required parameter 'approvalRequestId' is set
      if (approvalRequestId === undefined || approvalRequestId === null) {
        throw new Error("Missing the required parameter 'approvalRequestId' when calling rejectTeamCreation");
      }

      let pathParams = {
        'approvalRequestId': approvalRequestId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/approvals/{approvalRequestId}/reject', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
