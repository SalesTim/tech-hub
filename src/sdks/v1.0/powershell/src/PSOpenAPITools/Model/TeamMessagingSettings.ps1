#
# SalesTim API
# The unified Microsoft Teams Governance API. Visit our [Tech Hub](https://developers.salestim.com/api/) for more information. 
# Version: 1.2.1
# Contact: support@salestim.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER AllowUserEditMessages
Allow users to edit messages
.PARAMETER AllowUserDeleteMessages
Allow users to delete their own messages
.PARAMETER AllowOwnerDeleteMessages
Allow owners to delete messages
.PARAMETER AllowTeamMentions
Allow team mentions
.PARAMETER AllowChannelMentions
Allow channel mentions
.OUTPUTS

TeamMessagingSettings<PSCustomObject>
#>

function Initialize-TeamMessagingSettings {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${AllowUserEditMessages},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${AllowUserDeleteMessages},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${AllowOwnerDeleteMessages},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${AllowTeamMentions},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${AllowChannelMentions}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => TeamMessagingSettings' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "allowUserEditMessages" = ${AllowUserEditMessages}
            "allowUserDeleteMessages" = ${AllowUserDeleteMessages}
            "allowOwnerDeleteMessages" = ${AllowOwnerDeleteMessages}
            "allowTeamMentions" = ${AllowTeamMentions}
            "allowChannelMentions" = ${AllowChannelMentions}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to TeamMessagingSettings<PSCustomObject>

.DESCRIPTION

Convert from JSON to TeamMessagingSettings<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

TeamMessagingSettings<PSCustomObject>
#>
function ConvertFrom-JsonToTeamMessagingSettings {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => TeamMessagingSettings' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in TeamMessagingSettings
        $AllProperties = ("allowUserEditMessages", "allowUserDeleteMessages", "allowOwnerDeleteMessages", "allowTeamMentions", "allowChannelMentions")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "allowUserEditMessages"))) { #optional property not found
            $AllowUserEditMessages = $null
        } else {
            $AllowUserEditMessages = $JsonParameters.PSobject.Properties["allowUserEditMessages"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "allowUserDeleteMessages"))) { #optional property not found
            $AllowUserDeleteMessages = $null
        } else {
            $AllowUserDeleteMessages = $JsonParameters.PSobject.Properties["allowUserDeleteMessages"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "allowOwnerDeleteMessages"))) { #optional property not found
            $AllowOwnerDeleteMessages = $null
        } else {
            $AllowOwnerDeleteMessages = $JsonParameters.PSobject.Properties["allowOwnerDeleteMessages"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "allowTeamMentions"))) { #optional property not found
            $AllowTeamMentions = $null
        } else {
            $AllowTeamMentions = $JsonParameters.PSobject.Properties["allowTeamMentions"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "allowChannelMentions"))) { #optional property not found
            $AllowChannelMentions = $null
        } else {
            $AllowChannelMentions = $JsonParameters.PSobject.Properties["allowChannelMentions"].value
        }

        $PSO = [PSCustomObject]@{
            "allowUserEditMessages" = ${AllowUserEditMessages}
            "allowUserDeleteMessages" = ${AllowUserDeleteMessages}
            "allowOwnerDeleteMessages" = ${AllowOwnerDeleteMessages}
            "allowTeamMentions" = ${AllowTeamMentions}
            "allowChannelMentions" = ${AllowChannelMentions}
        }

        return $PSO
    }

}

