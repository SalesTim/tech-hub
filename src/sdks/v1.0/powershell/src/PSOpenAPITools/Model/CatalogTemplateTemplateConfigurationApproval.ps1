#
# SalesTim API
# The unified Microsoft Teams Governance API. Visit our [Tech Hub](https://developers.salestim.com/api/) for more information. 
# Version: 1.2.1
# Contact: support@salestim.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

The template approval policy.

.PARAMETER RequireApproval
Defines if the template requires an approval or not.
.PARAMETER ApprovalTeam
Members of an approval team, as an array of ApprovalTeamMember. See [https://developers.salestim.com/api/reference/Models/ApprovalTeamMember](https://developers.salestim.com/api/reference/Models/ApprovalTeamMember) for more information.
.OUTPUTS

CatalogTemplateTemplateConfigurationApproval<PSCustomObject>
#>

function Initialize-CatalogTemplateTemplateConfigurationApproval {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${RequireApproval},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${ApprovalTeam}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => CatalogTemplateTemplateConfigurationApproval' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "requireApproval" = ${RequireApproval}
            "approvalTeam" = ${ApprovalTeam}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to CatalogTemplateTemplateConfigurationApproval<PSCustomObject>

.DESCRIPTION

Convert from JSON to CatalogTemplateTemplateConfigurationApproval<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

CatalogTemplateTemplateConfigurationApproval<PSCustomObject>
#>
function ConvertFrom-JsonToCatalogTemplateTemplateConfigurationApproval {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => CatalogTemplateTemplateConfigurationApproval' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in CatalogTemplateTemplateConfigurationApproval
        $AllProperties = ("requireApproval", "approvalTeam")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "requireApproval"))) { #optional property not found
            $RequireApproval = $null
        } else {
            $RequireApproval = $JsonParameters.PSobject.Properties["requireApproval"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "approvalTeam"))) { #optional property not found
            $ApprovalTeam = $null
        } else {
            $ApprovalTeam = $JsonParameters.PSobject.Properties["approvalTeam"].value
        }

        $PSO = [PSCustomObject]@{
            "requireApproval" = ${RequireApproval}
            "approvalTeam" = ${ApprovalTeam}
        }

        return $PSO
    }

}

