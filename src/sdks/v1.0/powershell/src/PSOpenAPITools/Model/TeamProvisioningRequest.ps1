#
# SalesTim API
# The unified Microsoft Teams Governance API. Visit our [Tech Hub](https://developers.salestim.com/api/) for more information. 
# Version: 1.2.3
# Contact: support@salestim.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

A request to provision a team based on a template from your corporate catalog. See [https://developers.salestim.com/api/reference/Models/ProvisioningRequest](https://developers.salestim.com/api/reference/Models/ProvisioningRequest) for more information.

.PARAMETER Template
No description available.
.PARAMETER Team
No description available.
.PARAMETER Metadata
Metadata from the app client as a JSON object. See [https://developers.salestim.com/api/reference/Models/AppMetadata](https://developers.salestim.com/api/reference/Models/VirtualAppMetadata) for more information.
.OUTPUTS

TeamProvisioningRequest<PSCustomObject>
#>

function Initialize-TeamProvisioningRequest {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Template},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Team},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Metadata}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => TeamProvisioningRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "template" = ${Template}
            "team" = ${Team}
            "metadata" = ${Metadata}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to TeamProvisioningRequest<PSCustomObject>

.DESCRIPTION

Convert from JSON to TeamProvisioningRequest<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

TeamProvisioningRequest<PSCustomObject>
#>
function ConvertFrom-JsonToTeamProvisioningRequest {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => TeamProvisioningRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in TeamProvisioningRequest
        $AllProperties = ("template", "team", "metadata")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "template"))) { #optional property not found
            $Template = $null
        } else {
            $Template = $JsonParameters.PSobject.Properties["template"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "team"))) { #optional property not found
            $Team = $null
        } else {
            $Team = $JsonParameters.PSobject.Properties["team"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "metadata"))) { #optional property not found
            $Metadata = $null
        } else {
            $Metadata = $JsonParameters.PSobject.Properties["metadata"].value
        }

        $PSO = [PSCustomObject]@{
            "template" = ${Template}
            "team" = ${Team}
            "metadata" = ${Metadata}
        }

        return $PSO
    }

}

