/**
 * SalesTim API
 * The unified Microsoft Teams Governance API. Visit our [Tech Hub](https://developers.salestim.com/api/) for more information. 
 *
 * The version of the OpenAPI document: 1.2.3
 * Contact: support@salestim.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TeamDiscoverySettings from './TeamDiscoverySettings';
import TeamFunSettings from './TeamFunSettings';
import TeamGuestSettings from './TeamGuestSettings';
import TeamMemberSettings from './TeamMemberSettings';
import TeamMessagingSettings from './TeamMessagingSettings';

/**
 * The Team model module.
 * @module model/Team
 * @version 1.2.3
 */
class Team {
    /**
     * Constructs a new <code>Team</code>.
     * A Microsoft Teams team.
     * @alias module:model/Team
     */
    constructor() { 
        
        Team.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Team</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Team} obj Optional instance to populate.
     * @return {module:model/Team} The populated <code>Team</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Team();

            if (data.hasOwnProperty('@odata.context')) {
                obj['@odata.context'] = ApiClient.convertToType(data['@odata.context'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('createdDateTime')) {
                obj['createdDateTime'] = ApiClient.convertToType(data['createdDateTime'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('internalId')) {
                obj['internalId'] = ApiClient.convertToType(data['internalId'], 'String');
            }
            if (data.hasOwnProperty('classification')) {
                obj['classification'] = ApiClient.convertToType(data['classification'], 'String');
            }
            if (data.hasOwnProperty('specialization')) {
                obj['specialization'] = ApiClient.convertToType(data['specialization'], 'String');
            }
            if (data.hasOwnProperty('visibility')) {
                obj['visibility'] = ApiClient.convertToType(data['visibility'], 'String');
            }
            if (data.hasOwnProperty('webUrl')) {
                obj['webUrl'] = ApiClient.convertToType(data['webUrl'], 'String');
            }
            if (data.hasOwnProperty('isArchived')) {
                obj['isArchived'] = ApiClient.convertToType(data['isArchived'], 'Boolean');
            }
            if (data.hasOwnProperty('isMembershipLimitedToOwners')) {
                obj['isMembershipLimitedToOwners'] = ApiClient.convertToType(data['isMembershipLimitedToOwners'], 'Boolean');
            }
            if (data.hasOwnProperty('discoverySettings')) {
                obj['discoverySettings'] = TeamDiscoverySettings.constructFromObject(data['discoverySettings']);
            }
            if (data.hasOwnProperty('memberSettings')) {
                obj['memberSettings'] = TeamMemberSettings.constructFromObject(data['memberSettings']);
            }
            if (data.hasOwnProperty('guestSettings')) {
                obj['guestSettings'] = TeamGuestSettings.constructFromObject(data['guestSettings']);
            }
            if (data.hasOwnProperty('messagingSettings')) {
                obj['messagingSettings'] = TeamMessagingSettings.constructFromObject(data['messagingSettings']);
            }
            if (data.hasOwnProperty('funSettings')) {
                obj['funSettings'] = TeamFunSettings.constructFromObject(data['funSettings']);
            }
        }
        return obj;
    }


}

/**
 * OData Context
 * @member {String} @odata.context
 */
Team.prototype['@odata.context'] = undefined;

/**
 * Team ID
 * @member {String} id
 */
Team.prototype['id'] = undefined;

/**
 * Team Created Date Time
 * @member {String} createdDateTime
 */
Team.prototype['createdDateTime'] = undefined;

/**
 * Team Display Name
 * @member {String} displayName
 */
Team.prototype['displayName'] = undefined;

/**
 * Team Description
 * @member {String} description
 */
Team.prototype['description'] = undefined;

/**
 * Team Internal ID
 * @member {String} internalId
 */
Team.prototype['internalId'] = undefined;

/**
 * Team Classification
 * @member {String} classification
 */
Team.prototype['classification'] = undefined;

/**
 * Team Specialization
 * @member {String} specialization
 */
Team.prototype['specialization'] = undefined;

/**
 * Team Visibility
 * @member {String} visibility
 */
Team.prototype['visibility'] = undefined;

/**
 * Team Web URL
 * @member {String} webUrl
 */
Team.prototype['webUrl'] = undefined;

/**
 * Team Is Archived
 * @member {Boolean} isArchived
 */
Team.prototype['isArchived'] = undefined;

/**
 * Team Is Membership Limited To Owners
 * @member {Boolean} isMembershipLimitedToOwners
 */
Team.prototype['isMembershipLimitedToOwners'] = undefined;

/**
 * @member {module:model/TeamDiscoverySettings} discoverySettings
 */
Team.prototype['discoverySettings'] = undefined;

/**
 * @member {module:model/TeamMemberSettings} memberSettings
 */
Team.prototype['memberSettings'] = undefined;

/**
 * @member {module:model/TeamGuestSettings} guestSettings
 */
Team.prototype['guestSettings'] = undefined;

/**
 * @member {module:model/TeamMessagingSettings} messagingSettings
 */
Team.prototype['messagingSettings'] = undefined;

/**
 * @member {module:model/TeamFunSettings} funSettings
 */
Team.prototype['funSettings'] = undefined;






export default Team;

